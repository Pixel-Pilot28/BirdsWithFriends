version: '3.8'

# Development environment - faster startup, hot reloading, debug features
services:
  # Frontend with hot reloading
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      target: development
    container_name: birds-frontend-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8001
      - VITE_STORY_ENGINE_URL=http://localhost:8005
      - VITE_AGGREGATOR_URL=http://localhost:8004
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev
    networks:
      - birds-network

  # Lightweight database for development
  postgres-dev:
    image: postgres:15-alpine
    container_name: birds-postgres-dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=birds_dev
      - POSTGRES_USER=birds_dev
      - POSTGRES_PASSWORD=dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - birds-network

  redis-dev:
    image: redis:7-alpine
    container_name: birds-redis-dev
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - birds-network

  # Backend services with debug capabilities
  sampler-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: birds-sampler-dev
    ports:
      - "8001:8000"
      - "5678:5678"  # Debug port
    environment:
      - CORNELL_CAM_URL=https://www.youtube.com/watch?v=x10vL6_47Dw
      - SAMPLE_INTERVAL=30
      - AUDIO_DURATION=5
      - DATABASE_URL=postgresql://birds_dev:dev_password@postgres-dev:5432/birds_dev
      - REDIS_URL=redis://redis-dev:6379
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - PYTHONPATH=/app
      - PYTHON_DEBUG=1
    volumes:
      - .:/app
      - ./output:/app/output
    working_dir: /app
    command: python -m debugpy --listen 0.0.0.0:5678 --wait-for-client -m uvicorn ingest.sampler:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - postgres-dev
      - redis-dev
    networks:
      - birds-network

  aggregator-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: birds-aggregator-dev
    ports:
      - "8004:8004"
      - "5679:5679"  # Debug port
    environment:
      - DATABASE_URL=postgresql://birds_dev:dev_password@postgres-dev:5432/birds_dev
      - REDIS_URL=redis://redis-dev:6379
      - HOST=0.0.0.0
      - PORT=8004
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - PYTHONPATH=/app
      - PYTHON_DEBUG=1
    volumes:
      - .:/app
      - ./data/aggregator:/app/data
    working_dir: /app
    command: python -m debugpy --listen 0.0.0.0:5679 --wait-for-client -m uvicorn aggregator.service:app --host 0.0.0.0 --port 8004 --reload
    depends_on:
      - postgres-dev
      - redis-dev
    networks:
      - birds-network

  story-engine-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: birds-story-engine-dev
    ports:
      - "8005:8005"
      - "5680:5680"  # Debug port
    environment:
      - DATABASE_URL=postgresql://birds_dev:dev_password@postgres-dev:5432/birds_dev
      - REDIS_URL=redis://redis-dev:6379
      - HOST=0.0.0.0
      - PORT=8005
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - PYTHONPATH=/app
      - PYTHON_DEBUG=1
      - OPENAI_API_KEY=${OPENAI_API_KEY:-dummy_key_for_dev}
    volumes:
      - .:/app
      - ./data/stories:/app/story_data
    working_dir: /app
    command: python -m debugpy --listen 0.0.0.0:5680 --wait-for-client -m uvicorn story_engine.service:app --host 0.0.0.0 --port 8005 --reload
    depends_on:
      - postgres-dev
      - redis-dev
      - aggregator-dev
    networks:
      - birds-network

  # Development tools
  db-admin:
    image: dpage/pgadmin4:latest
    container_name: birds-pgadmin-dev
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@birds.local
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres-dev
    networks:
      - birds-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: birds-redis-commander-dev
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis-dev:6379
    depends_on:
      - redis-dev
    networks:
      - birds-network

# Development volumes
volumes:
  postgres_dev_data:
    driver: local
  pgadmin_data:
    driver: local

# Network for development
networks:
  birds-network:
    driver: bridge