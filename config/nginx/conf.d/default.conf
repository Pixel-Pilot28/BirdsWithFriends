# Main load balancer and reverse proxy configuration

upstream frontend {
    server birds-frontend:3000;
}

upstream api_sampler {
    server birds-sampler:8000;
}

upstream api_audio_recognizer {
    server birds-audio-recognizer:8002;
}

upstream api_image_recognizer {
    server birds-image-recognizer:8003;
}

upstream api_aggregator {
    server birds-aggregator:8004;
}

upstream api_story_engine {
    server birds-story-engine:8005;
}

# Main server block
server {
    listen 80;
    server_name localhost birds.local *.birds.local;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;

    # Rate limiting
    limit_req zone=api burst=20 nodelay;

    # Frontend application
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # API routing
    location /api/ingest/ {
        proxy_pass http://api_sampler/;
        include /etc/nginx/conf.d/api_common.conf;
    }

    location /api/recognition/audio/ {
        proxy_pass http://api_audio_recognizer/;
        include /etc/nginx/conf.d/api_common.conf;
    }

    location /api/recognition/image/ {
        proxy_pass http://api_image_recognizer/;
        include /etc/nginx/conf.d/api_common.conf;
    }

    location /api/aggregator/ {
        proxy_pass http://api_aggregator/;
        include /etc/nginx/conf.d/api_common.conf;
    }

    location /api/stories/ {
        proxy_pass http://api_story_engine/;
        include /etc/nginx/conf.d/api_common.conf;
    }

    # WebSocket support for development
    location /ws {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Metrics endpoint for monitoring
    location /metrics {
        proxy_pass http://api_sampler/metrics;
        include /etc/nginx/conf.d/api_common.conf;
    }

    # Static files caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://frontend;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}